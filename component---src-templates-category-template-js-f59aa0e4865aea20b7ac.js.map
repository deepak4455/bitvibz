{"version":3,"file":"component---src-templates-category-template-js-f59aa0e4865aea20b7ac.js","mappings":"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","sources":["webpack://gatsby-starter-hello-world/./src/components/Banner/Recent.js","webpack://gatsby-starter-hello-world/./src/components/Categories.js","webpack://gatsby-starter-hello-world/./src/components/Banner/BannerCategories.js","webpack://gatsby-starter-hello-world/./src/components/Banner/index.js","webpack://gatsby-starter-hello-world/./src/components/Posts/Post.js","webpack://gatsby-starter-hello-world/./src/components/Posts/index.js","webpack://gatsby-starter-hello-world/./src/components/SEO.js","webpack://gatsby-starter-hello-world/./src/templates/category-template.js"],"sourcesContent":["import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nconst query = graphql`\n  {\n    allMdx(sort: { fields: frontmatter___date, order: DESC }, limit: 5) {\n      nodes {\n        frontmatter {\n          slug\n          image {\n            childImageSharp {\n              gatsbyImageData(width: 70, height: 70, quality: 30)\n            }\n          }\n          title\n          category\n        }\n      }\n    }\n  }\n`\n\nconst Recent = () => {\n  const data = useStaticQuery(query)\n\n  const {\n    allMdx: { nodes: posts },\n  } = data\n  return (\n    <div className=\"widget\">\n      <h2 className=\"mb-6\">Latest Post</h2>\n      {posts.map(post => {\n        const { title, slug, image } = post.frontmatter\n\n        return (\n          <div className=\"feature-post\">\n            <Link to={`/${slug}`} key={post.id}>\n              <GatsbyImage\n                image={getImage(image)}\n                alt={title}\n                className=\"feature-post-image\"\n              ></GatsbyImage>\n            </Link>\n            <div className=\"post-details\">\n              <h2>\n                <Link to={`/${slug}`} key={post.id}>\n                  {title}\n                </Link>\n              </h2>\n              {/* <div className=\"tags\">\n                <Link to={`/${category}`}>{category}</Link>\n              </div> */}\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Recent\n","import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { Link } from \"gatsby\"\nconst query = graphql`\n  {\n    allMdx {\n      distinct(field: frontmatter___category)\n    }\n  }\n`\n\nconst Categories = () => {\n  const {\n    allMdx: { distinct },\n  } = useStaticQuery(query)\n  return (\n    <div className=\"content widget\">\n      <h2>Categories</h2>\n      {distinct.map((category, index) => {\n        return (\n          <div className=\"tag-item\" key={index}>\n            <Link to={`/${category}`} className=\"category\">\n              {category}\n              {/* <span className=\"post-count\">(4)</span> */}\n            </Link>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Categories\n","import React from \"react\"\nimport Categories from \"../Categories\"\nconst BannerCategories = () => {\n  return (\n    <>\n      <Categories />\n    </>\n  )\n}\nexport default BannerCategories\n","import React from \"react\"\nimport Recent from \"./Recent\"\nimport BannerCategories from \"./BannerCategories\"\n// import Promotion from \"./Promotion\"\nconst Banner = () => {\n  return (\n    <div className=\"sidebar\">\n      {/* <Promotion /> */}\n      <BannerCategories />\n      <Recent />\n    </div>\n  )\n}\n\nexport default Banner\n","import React from \"react\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport { Link } from \"gatsby\"\n\nconst Post = ({ frontmatter, excerpt }) => {\n  const { title, description, image, slug, category } = frontmatter\n\n  return (\n    <article className=\"px-6 mb-14\">\n      <Link to={`/${slug}`}>\n        <GatsbyImage\n          image={getImage(image)}\n          alt={title}\n          className=\"post-img mb-5 img-radius\"\n          // imgClassName=\"image is-16by9\"\n        />\n      </Link>\n\n      <div className=\"content\">\n        <div className=\"categories  mb-3\">\n          <Link to={`/${category}`}>{category}</Link>\n        </div>\n        <h2 className=\"mb-3 \">\n          <Link to={`/${slug}`}>{title}</Link>\n        </h2>\n        <p>{description}</p>\n      </div>\n    </article>\n  )\n}\n\nexport default Post\n","import React from \"react\"\nimport Post from \"./Post\"\nimport Banner from \"../Banner/\"\n// import SEO from \"../SEO\"\n\nconst Posts = ({ posts, title }) => {\n  return (\n    <>\n      {/* <SEO title={title} /> */}\n      <div className=\"container blog-layout pt-16 \">\n        <div className=\"articles\">\n          <h3 className=\"page-title text-2xl mb-12 px-6\">{title}</h3>\n          <div className=\"article-container\">\n            {posts.map(post => {\n              return <Post key={post.id} {...post} />\n            })}\n          </div>\n        </div>\n        <Banner />\n      </div>\n    </>\n  )\n}\n\nexport default Posts\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useLocation } from \"@reach/router\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst SEO = ({ title, description, image, article }) => {\n  const { pathname } = useLocation()\n  const { site } = useStaticQuery(query)\n\n  const {\n    defaultTitle,\n    titleTemplate,\n    defaultDescription,\n    siteUrl,\n    defaultImage,\n    twitterUsername,\n  } = site.siteMetadata\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}${image || defaultImage}`,\n    url: `${siteUrl}${pathname}`,\n  }\n\n  return (\n    <Helmet title={seo.title} titleTemplate={titleTemplate}>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n\n      {seo.url && <meta property=\"og:url\" content={seo.url} />}\n\n      {(article ? true : null) && <meta property=\"og:type\" content=\"article\" />}\n\n      {seo.title && <meta property=\"og:title\" content={seo.title} />}\n\n      {seo.description && (\n        <meta property=\"og:description\" content={seo.description} />\n      )}\n\n      {seo.image && <meta property=\"og:image\" content={seo.image} />}\n\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n\n      {twitterUsername && (\n        <meta name=\"twitter:creator\" content={twitterUsername} />\n      )}\n\n      {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\n\n      {seo.description && (\n        <meta name=\"twitter:description\" content={seo.description} />\n      )}\n\n      {seo.image && <meta name=\"twitter:image\" content={seo.image} />}\n    </Helmet>\n  )\n}\n\nexport default SEO\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  image: PropTypes.string,\n  article: PropTypes.bool,\n}\n\nSEO.defaultProps = {\n  title: null,\n  description: null,\n  image: null,\n  article: false,\n}\n\nconst query = graphql`\n  query SEO {\n    site {\n      siteMetadata {\n        defaultTitle: title\n        titleTemplate\n        defaultDescription: description\n        siteUrl: url\n        defaultImage: image\n        twitterUsername\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Layout from \"../components/Layout\"\nimport Posts from \"../components/Posts\"\nimport { graphql } from \"gatsby\"\nimport SEO from \"../components/SEO\"\n\nconst CategoryTemplate = props => {\n  const {\n    data: {\n      categories: { nodes: posts },\n    },\n  } = props\n  const {\n    pageContext: { category },\n  } = props\n  return (\n    <Layout>\n      <SEO title={category} />\n      <Posts posts={posts} title={category} />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query GetCategories($category: String) {\n    categories: allMdx(\n      sort: { fields: frontmatter___date, order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      nodes {\n        excerpt\n        frontmatter {\n          title\n\n          category\n          date(formatString: \"Do MMMM, YYYY\")\n          slug\n          image {\n            childImageSharp {\n              gatsbyImageData\n            }\n          }\n        }\n        id\n      }\n    }\n  }\n`\n\nexport default CategoryTemplate\n"],"names":["posts","useStaticQuery","allMdx","nodes","className","map","post","frontmatter","title","slug","image","to","key","id","G","getImage","alt","distinct","category","index","excerpt","description","Banner","SEO","article","pathname","useLocation","query","site","siteMetadata","defaultTitle","titleTemplate","defaultDescription","siteUrl","defaultImage","twitterUsername","seo","url","name","content","property","defaultProps","props","data","categories","pageContext"],"sourceRoot":""}