{"version":3,"file":"component---src-templates-category-template-js-71b3b2cde3d4974d89f4.js","mappings":"+MA8DA,EAtCe,WACb,IAGmBA,GAHNC,EAAAA,EAAAA,IApBJ,cAuBPC,OAAUC,MAEZ,OACE,uBAAKC,UAAU,UACb,sBAAIA,UAAU,QAAd,eACCJ,EAAMK,KAAI,SAAAC,GACT,MAAyCA,EAAKC,YAAtCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAAMC,EAArB,EAAqBA,SAAUC,EAA/B,EAA+BA,MAE/B,OACE,uBAAKP,UAAU,gBACb,gBAAC,KAAD,CAAMQ,GAAE,IAAMH,EAAQI,IAAKP,EAAKQ,IAC9B,gBAAC,EAAAC,EAAD,CACEJ,OAAOK,EAAAA,EAAAA,GAASL,GAChBM,IAAKT,EACLJ,UAAU,wBAGd,uBAAKA,UAAU,gBACb,0BACE,gBAAC,KAAD,CAAMQ,GAAE,IAAMH,EAAQI,IAAKP,EAAKQ,IAC7BN,IAGL,uBAAKJ,UAAU,QACb,gBAAC,KAAD,CAAMQ,GAAE,IAAMF,GAAaA,WCpB3C,EArBmB,WACjB,IACYQ,GACRjB,EAAAA,EAAAA,IAXK,cAUPC,OAAUgB,SAEZ,OACE,uBAAKd,UAAU,kBACb,wCACCc,EAASb,KAAI,SAACK,EAAUS,GACvB,OACE,uBAAKf,UAAU,WAAWS,IAAKM,GAC7B,gBAAC,KAAD,CAAMP,GAAE,IAAMF,EAAYN,UAAU,YACjCM,SCbf,EAPyB,WACvB,OACE,gCACE,gBAAC,EAAD,QCSN,EAVe,WACb,OACE,uBAAKN,UAAU,WAEb,gBAAC,EAAD,MACA,gBAAC,EAAD,S,uFCsBN,EA3Ba,SAAC,GAA8B,IAA5BG,EAA2B,EAA3BA,YAAaa,EAAc,EAAdA,QACnBZ,EAAiCD,EAAjCC,MAAOG,EAA0BJ,EAA1BI,MAAOF,EAAmBF,EAAnBE,KAAMC,EAAaH,EAAbG,SAE5B,OACE,2BAASN,UAAU,cACjB,gBAAC,KAAD,CAAMQ,GAAE,IAAMH,GACZ,gBAAC,EAAAM,EAAD,CACEJ,OAAOK,EAAAA,EAAAA,GAASL,GAChBM,IAAKT,EACLJ,UAAU,8BAKd,uBAAKA,UAAU,WACb,uBAAKA,UAAU,oBACb,gBAAC,KAAD,CAAMQ,GAAE,IAAMF,GAAaA,IAE7B,sBAAIN,UAAU,SACZ,gBAAC,KAAD,CAAMQ,GAAE,IAAMH,GAASD,IAEzB,yBAAIY,M,oBCDZ,EAnBc,SAAC,GAAsB,IAApBpB,EAAmB,EAAnBA,MAAOQ,EAAY,EAAZA,MACtB,OACE,gCACE,gBAACa,EAAA,EAAD,CAAKb,MAAOA,IACZ,uBAAKJ,UAAU,gCACb,uBAAKA,UAAU,YACb,sBAAIA,UAAU,kCAAkCI,GAChD,uBAAKJ,UAAU,qBACZJ,EAAMK,KAAI,SAAAC,GACT,OAAO,gBAAC,EAAD,eAAMO,IAAKP,EAAKQ,IAAQR,SAIrC,gBAACgB,EAAA,EAAD,U,8DC6BR,UA1CyB,SAAAC,GACvB,IAEyBvB,EAErBuB,EAHFC,KACEC,WAActB,MAIDO,EACba,EADFG,YAAehB,SAEjB,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAOV,MAAOA,EAAOQ,MAAOE,O","sources":["webpack://gatsby-starter-hello-world/./src/components/Banner/Recent.js","webpack://gatsby-starter-hello-world/./src/components/Categories.js","webpack://gatsby-starter-hello-world/./src/components/Banner/BannerCategories.js","webpack://gatsby-starter-hello-world/./src/components/Banner/index.js","webpack://gatsby-starter-hello-world/./src/components/Posts/Post.js","webpack://gatsby-starter-hello-world/./src/components/Posts/index.js","webpack://gatsby-starter-hello-world/./src/templates/category-template.js"],"sourcesContent":["import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nconst query = graphql`\n  {\n    allMdx(sort: { fields: frontmatter___date, order: DESC }, limit: 5) {\n      nodes {\n        frontmatter {\n          slug\n          image {\n            childImageSharp {\n              gatsbyImageData(width: 70, height: 70, quality: 30)\n            }\n          }\n          title\n          category\n        }\n      }\n    }\n  }\n`\n\nconst Recent = () => {\n  const data = useStaticQuery(query)\n\n  const {\n    allMdx: { nodes: posts },\n  } = data\n  return (\n    <div className=\"widget\">\n      <h2 className=\"mb-6\">Latest Post</h2>\n      {posts.map(post => {\n        const { title, slug, category, image } = post.frontmatter\n\n        return (\n          <div className=\"feature-post\">\n            <Link to={`/${slug}`} key={post.id}>\n              <GatsbyImage\n                image={getImage(image)}\n                alt={title}\n                className=\"feature-post-image\"\n              ></GatsbyImage>\n            </Link>\n            <div className=\"post-details\">\n              <h2>\n                <Link to={`/${slug}`} key={post.id}>\n                  {title}\n                </Link>\n              </h2>\n              <div className=\"tags\">\n                <Link to={`/${category}`}>{category}</Link>\n              </div>\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Recent\n","import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { Link } from \"gatsby\"\nconst query = graphql`\n  {\n    allMdx {\n      distinct(field: frontmatter___category)\n    }\n  }\n`\n\nconst Categories = () => {\n  const {\n    allMdx: { distinct },\n  } = useStaticQuery(query)\n  return (\n    <div className=\"content widget\">\n      <h2>Categories</h2>\n      {distinct.map((category, index) => {\n        return (\n          <div className=\"tag-item\" key={index}>\n            <Link to={`/${category}`} className=\"category\">\n              {category}\n              {/* <span className=\"post-count\">(4)</span> */}\n            </Link>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Categories\n","import React from \"react\"\nimport Categories from \"../Categories\"\nconst BannerCategories = () => {\n  return (\n    <>\n      <Categories />\n    </>\n  )\n}\nexport default BannerCategories\n","import React from \"react\"\nimport Recent from \"./Recent\"\nimport BannerCategories from \"./BannerCategories\"\nimport Promotion from \"./Promotion\"\nconst Banner = () => {\n  return (\n    <div className=\"sidebar\">\n      {/* <Promotion /> */}\n      <Recent />\n      <BannerCategories />\n    </div>\n  )\n}\n\nexport default Banner\n","import React from \"react\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport { Link } from \"gatsby\"\n\nconst Post = ({ frontmatter, excerpt }) => {\n  const { title, image, slug, category } = frontmatter\n\n  return (\n    <article className=\"px-6 mb-14\">\n      <Link to={`/${slug}`}>\n        <GatsbyImage\n          image={getImage(image)}\n          alt={title}\n          className=\"post-img mb-5 img-radius\"\n          // imgClassName=\"image is-16by9\"\n        />\n      </Link>\n\n      <div className=\"content\">\n        <div className=\"categories  mb-3\">\n          <Link to={`/${category}`}>{category}</Link>\n        </div>\n        <h2 className=\"mb-3 \">\n          <Link to={`/${slug}`}>{title}</Link>\n        </h2>\n        <p>{excerpt}</p>\n      </div>\n    </article>\n  )\n}\n\nexport default Post\n","import React from \"react\"\nimport Post from \"./Post\"\nimport Banner from \"../Banner/\"\nimport SEO from \"../SEO\"\n\nconst Posts = ({ posts, title }) => {\n  return (\n    <>\n      <SEO title={title} />\n      <div className=\"container blog-layout pt-16 \">\n        <div className=\"articles\">\n          <h3 className=\"page-title text-2xl mb-12 px-6\">{title}</h3>\n          <div className=\"article-container\">\n            {posts.map(post => {\n              return <Post key={post.id} {...post} />\n            })}\n          </div>\n        </div>\n        <Banner />\n      </div>\n    </>\n  )\n}\n\nexport default Posts\n","import React from \"react\"\nimport Layout from \"../components/Layout\"\nimport Posts from \"../components/Posts\"\nimport { graphql } from \"gatsby\"\n\nconst CategoryTemplate = props => {\n  const {\n    data: {\n      categories: { nodes: posts },\n    },\n  } = props\n  const {\n    pageContext: { category },\n  } = props\n  return (\n    <Layout>\n      <Posts posts={posts} title={category} />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query GetCategories($category: String) {\n    categories: allMdx(\n      sort: { fields: frontmatter___date, order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      nodes {\n        excerpt\n        frontmatter {\n          title\n          author\n          category\n          date(formatString: \"MMMM, Do YYYY\")\n          slug\n          image {\n            childImageSharp {\n              gatsbyImageData\n            }\n          }\n        }\n        id\n      }\n    }\n  }\n`\n\nexport default CategoryTemplate\n"],"names":["posts","useStaticQuery","allMdx","nodes","className","map","post","frontmatter","title","slug","category","image","to","key","id","G","getImage","alt","distinct","index","excerpt","SEO","Banner","props","data","categories","pageContext"],"sourceRoot":""}